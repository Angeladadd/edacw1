- name: Ensure MinIO alias is configured
  shell: "/usr/local/bin/mc alias set {{ minio_alias }} {{ s3_url }} {{ minio_access_key }} {{ minio_secret_key }}"

- name: Create MinIO bucket if it does not exist
  shell: "/usr/local/bin/mc mb --ignore-existing myminio/{{ validation_bucket }}"

- name: Copy pipeline scripts
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../pipeline"
    dest: /home/almalinux/
    owner: almalinux
    group: almalinux
    mode: "0755"

- name: Analyse E.Coli results
  shell: |
    spark-submit \
      --master yarn \
      --deploy-mode cluster \
      --packages org.apache.hadoop:hadoop-aws:3.3.4,com.amazonaws:aws-java-sdk-bundle:1.12.262 \
      --conf spark.executor.cores=4 \
      --conf spark.executor.memory=4g \
      {{ ppl_path }}/validate.py ecoli ecoli-alphafolddb ecoli-cath-parsed {{ validation_bucket }}
  register: ecoli_submit_result
  changed_when: false

- name: Extract YARN application ID for E.Coli job
  set_fact:
    ecoli_app_id: "{{ ecoli_submit_result.stdout | regex_search('application_\\d+_\\d+') }}"

- name: Analyse Human results
  shell: |
    spark-submit \
      --master yarn \
      --deploy-mode cluster \
      --packages org.apache.hadoop:hadoop-aws:3.3.4,com.amazonaws:aws-java-sdk-bundle:1.12.262 \
      --conf spark.executor.cores=4 \
      --conf spark.executor.memory=4g \
      {{ ppl_path }}/validate.py human human-alphafolddb human-cath-parsed {{ validation_bucket }}
  register: human_submit_result
  changed_when: false

- name: Extract YARN application ID for Human job
  set_fact:
    human_app_id: "{{ human_submit_result.stdout | regex_search('application_\\d+_\\d+') }}"

- name: Check E.Coli job status until completed
  shell: "yarn application -status {{ ecoli_app_id }}"
  register: ecoli_status
  retries: 10
  delay: 60
  until: "'Final-State : SUCCEEDED' in ecoli_status.stdout or \
          'Final-State : FAILED' in ecoli_status.stdout or \
          'Final-State : KILLED' in ecoli_status.stdout"
  failed_when:
    - "'Final-State : FAILED' in ecoli_status.stdout"
    - "'Final-State : KILLED' in ecoli_status.stdout"

- name: Check Human job status until completed
  shell: "yarn application -status {{ human_app_id }}"
  register: human_status
  retries: 10
  delay: 60
  until: "'Final-State : SUCCEEDED' in human_status.stdout or \
          'Final-State : FAILED' in human_status.stdout or \
          'Final-State : KILLED' in human_status.stdout"
  failed_when:
    - "'Final-State : FAILED' in human_status.stdout"
    - "'Final-State : KILLED' in human_status.stdout"